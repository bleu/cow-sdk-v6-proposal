name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.6

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/hydrogen'
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: |
          # First try with frozen lockfile
          pnpm install --frozen-lockfile || (
            # If that fails, try to install and generate a new lockfile
            echo "Frozen lockfile install failed, attempting to generate new lockfile..."
            pnpm install --no-frozen-lockfile
          )
      
      - name: Lint
        run: pnpm run lint
      
      - name: Build packages
        run: pnpm run build --filter="@cowprotocol/*"
      
      - name: Run tests
        run: |
          mkdir -p test-results
          pnpm run test:ci
        env:
          JEST_JUNIT_OUTPUT_DIR: ./test-results
          JEST_JUNIT_OUTPUT_NAME: jest.results.json
          JEST_JUNIT_UNIQUE_OUTPUT_NAME: false
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/jest.results.json
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
          if-no-files-found: warn
      
      - name: Build CRA example
        run: |
          cd examples/cra
          pnpm install
          pnpm add @ethersproject/providers @ethersproject/contracts @cowprotocol/contracts@^1.6.0 --no-save
          pnpm add file:../../pkg/cow-sdk --no-save
          pnpm run build
